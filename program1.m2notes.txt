cell[103] = 3 * cell[100] + 2 * cell[101] + cell[102]

cell[55] = 3
cell[56] = 2


00000200   //loadc 0
00000064   //reg[0] = 64(100) memory addresses
00000210   //loadc 1
00000000   //reg[1] = 0       result
00000220   //loadc 2
00000001   //reg[2] = 1       accumulator
00000260   //loadc 6
00000037   //reg[6] = 55      multiplier
00000130   //reg[3] = cell[reg[0]] = cell[100] 
00000146   //reg[4] = cell[reg[6]] = cell[55]  get 3
00000534   //reg[3] = reg[3] * reg[4]   cell[100]*3
00000413   //reg[1] = reg[1] + reg[3]   cell[100]*3
00000402   //reg[0] = reg[0] + reg[2] = 101
00000462   //reg[6] = reg[6] + reg[2] = 56
00000130   //reg[3] = cell[reg[0]] = cell[101] 
00000147   //reg[4] = cell[reg[6]] = cell[56]   get 2
00000534   //reg[3] = reg[3] * reg[4]    cell[101]*2
00000413   //reg[1] = reg[1] + reg[3]    cell[100]*3 + cell[101]*2
00000402   //reg[0] = reg[0] + reg[2] = 102
00000130   //reg[3] = cell[reg[0]] = cell[102]
00000413   //reg[1] = reg[1] + reg[3]    cell[100]*3 + cell[101]*2 + cell[102]
00000402   //reg[0] = reg[0] + reg[2] = 103
00000301   // store 0 1 -> cell[reg[0]] = cell[103] = cell[100]*3 + cell[101]*2 + cell[102]


cell[30] = 3 * cell[27] + 2 * cell[28] + cell[29] = 12+2+5 = 19 (13 in hex)

cell[25] = 3
cell[26] = 2
cell[27] = 4
cell[28] = 1
cell[29] = 5


00000200   //loadc 0
0000001b   //reg[0] = 27 
00000210   //loadc 1
00000000   //reg[1] = 0
00000220   //loadc 2
00000001   //reg[2] = 1
00000260   //loadc 6
00000019   //reg[6] = 25
00000130   //load reg[3] = cell[reg[0]] = cell[27] holds 4
00000146   //load reg[4] = cell[reg[6]] = cell[25] holds 3
00000534   //mul reg[3] = reg[3] * reg[4] = cell(27)*3 (4*3 = 12)
00000413   //add reg[1] = reg[1] + reg[3] = cell(27)*3  ////////////////////////*TOTAL
00000402   //add reg[0] = reg[0] + reg[2] = 28
00000462   //add reg[6] = reg[6] + reg[2] = 26
00000130   //load reg[3] = cell[reg[0]] = cell[28] = 1
00000146   //load reg[4] = cell[reg[6]] = cell[26] = 2
00000534   //mul reg[3] = reg[3] * reg[4] = cell[28] * 2
00000413   //add reg[1] = reg[1] + reg[3] = cell[27] * 3 + cell[28] * 2 ////////*TOTAL
00000402   //add reg[0] = reg[0] + reg[2] = 29
00000130   //load reg[3] = cell[reg[0]] = cell[29]
00000413   //add reg[1] = reg[1] + reg[3] = cell[27] * 3 + cell[28] * 2 + cell[29]
00000402   //add reg[0] = reg[0] + reg[2] = 30
00000301   //store cell[reg[0]] = reg[1] ; cell[30] = cell[27] * 3 + cell[28] * 2 + cell[29]
00000000
00000000
3
2
4
1
5







